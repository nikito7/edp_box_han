### EB3 modbus package ###

modbus:

  - name: edpbox3
    type: tcp
    host: 10.1.0.47
    port: 9502
    delay: 1
    timeout: 3
    retries: 3
    retry_on_empty: true
    message_wait_milliseconds: 250
  
    sensors:

      - name: "EB3 0x0001" # Clock
        slave: 1
        address: 1
        input_type: input
        count: 1
        data_type: custom
        expert_mode: true
        structure: ">H7BhB"
        scan_interval: 5

      - name: "EB3 Firmware"
        slave: 1
        address: 4
        input_type: input
        count: 2
        data_type: string
        scan_interval: 30

      - name: "EB3 0x006C" # V/A
        slave: 1
        address: 108
        input_type: input
        count: 7
        data_type: custom
        structure: ">7H"
        scan_interval: 8

      - name: "EB3 0x0073" # Power
        slave: 1
        address: 115
        input_type: input
        count: 7
        data_type: custom
        expert_mode: true
        structure: ">7L"
        scan_interval: 9

      - name: "EB3 0x007B" # PF
        slave: 1
        address: 123
        input_type: input
        count: 5
        data_type: custom
        structure: ">5H"
        scan_interval: 11

      - name: "EB3 0x0026" # TotEneTx
        slave: 1
        address: 38
        input_type: input
        count: 3
        data_type: custom
        expert_mode: true
        structure: ">3L"
        scan_interval: 31

      - name: "EB3 0x0016" # TotEne I/E/Q
        slave: 1
        address: 22
        input_type: input
        count: 6
        data_type: custom
        expert_mode: true
        structure: ">6L"
        scan_interval: 32

      - name: "EB3 0x000B" # Tariff
        slave: 1
        address: 11
        input_type: input
        count: 1
        data_type: custom
        structure: ">Bx"
        scan_interval: 33

### ### ###

# EB3 template sensor (new style)

template:

  - sensor:

###

    - name: "EB3 HA Clock"
      state: >-
        {% if states('sensor.eb3_0x0001') is defined %}
          {{ now().strftime('%H:%M:%S') }}
        {% endif %}
      icon: mdi:clock

    - name: "EB3 Clock"
      state: >-
        {% if states('sensor.eb3_0x0001') is defined %}
          {% set hh = states('sensor.eb3_0x0001').split(',')[4] | int(0) %}
          {% set mm = states('sensor.eb3_0x0001').split(',')[5] | int(0) %}
          {% set ss = states('sensor.eb3_0x0001').split(',')[6] | int(0) %}
          {{ '{0:02d}'.format(hh) + ":" + '{0:02d}'.format(mm) + ":" + '{0:02d}'.format(ss) }}
        {% else %}
          {{ states('sensor.eb3_clock') }}
        {% endif %}
      icon: mdi:clock

# 16

    - name: "EB3 Import"
      state: >-
        {% set x = states('sensor.eb3_0x0016').split(',')[0] | float(0) %}
        {% if x > 0 %}
          {{ (x / 1000) | round(1) }}
        {% else %}
          {{ states('sensor.eb3_import') }}
        {% endif %}
      unit_of_measurement: "kWh"
      device_class: energy
      state_class: total_increasing

    - name: "EB3 Export"
      state: >-
        {% set x = states('sensor.eb3_0x0016').split(',')[1] | float(0) %}
        {% if x > 0 %}
          {{ (x / 1000) | round(3) }}
        {% else %}
          {{ states('sensor.eb3_export') }}
        {% endif %}
      unit_of_measurement: "kWh"
      device_class: energy
      state_class: total_increasing

# 26

    - name: "EB3 T1 Vazio"
      state: >-
        {% set x = states('sensor.eb3_0x0026').split(',')[0] | float(0) %}
        {% if x > 0 %}
            {{ (x / 1000) | round(1) }}
        {% else %}
          {{ states('sensor.eb3_t1_vazio') }}
        {% endif %}
      unit_of_measurement: "kWh"
      device_class: energy
      state_class: total_increasing

    - name: "EB3 T2 Ponta"
      state: >-
        {% set x = states('sensor.eb3_0x0026').split(',')[1] | float(0) %}
        {% if x > 0 %}
          {{ (x / 1000) | round(1) }}
        {% else %}
          {{ states('sensor.eb3_t2_ponta') }}
        {% endif %}
      unit_of_measurement: "kWh"
      device_class: energy
      state_class: total_increasing

    - name: "EB3 T3 Cheias"
      state: >-
        {% set x = states('sensor.eb3_0x0026').split(',')[2] | float(0) %}
        {% if x > 0 %}
          {{ (x / 1000) | round(1) }}
        {% else %}
          {{ states('sensor.eb3_t3_cheias') }}
        {% endif %}
      unit_of_measurement: "kWh"
      device_class: energy
      state_class: total_increasing

### ### ###

# eb3 sensor templates (old style)

sensor:

  - platform: template
    sensors:

      eb3_tariff:
        friendly_name: "EB3 Tariff"
        value_template: >-
          {% set x = states('sensor.eb3_0x000b')|string %}
          {% if x == "1" %}
            {{ "Vazio" }}
          {% elif x == "2" %}
            {{ "Ponta" }}
          {% elif x == "3" %}
            {{ "Cheias" }}
          {% endif %}
        icon_template: mdi:counter

# 6C

      eb3_voltage_l1:
        friendly_name: "EB3 Voltage L1"
        value_template: >-
            {% set x = states('sensor.eb3_0x006c').split(',')[0] | float(0) %}
            {% if x > 0 %}
              {{ x / 10 }}
            {% endif %}
        unit_of_measurement: "V"
        device_class: voltage

      eb3_voltage_l1_10:
        friendly_name: "EB3 Voltage L1-10"
        value_template: >-
            {% set x = states('sensor.eb3_0x006c').split(',')[0] | float(0) %}
            {% if x > 0 %}
              {{ x / 10 - 10 }}
            {% endif %}
        unit_of_measurement: "V"
        device_class: voltage

      eb3_current_l1:
        friendly_name: "EB3 Current L1"
        value_template: >-
            {% set x = states('sensor.eb3_0x006c').split(',')[1] | float(0) %}
            {% if x %}
              {{ x / 10 }}
            {% endif %}
        unit_of_measurement: "A"
        device_class: current

      eb3_voltage_l2:
        friendly_name: "EB3 Voltage L2"
        value_template: >-
            {% set x = states('sensor.eb3_0x006c').split(',')[2] | float(0) %}
            {% if x > 0 %}
              {{ x / 10 }}
            {% endif %}
        unit_of_measurement: "V"
        device_class: voltage

      eb3_current_l2:
        friendly_name: "EB3 Current L2"
        value_template: >-
            {% set x = states('sensor.eb3_0x006c').split(',')[3] | float(0) %}
            {% if x %}
              {{ x / 10 }}
            {% endif %}
        unit_of_measurement: "A"
        device_class: current

      eb3_voltage_l3:
        friendly_name: "EB3 Voltage L3"
        value_template: >-
            {% set x = states('sensor.eb3_0x006c').split(',')[4] | float(0) %}
            {% if x > 0 %}
              {{ x / 10 }}
            {% endif %}
        unit_of_measurement: "V"
        device_class: voltage

      eb3_voltage_l3_10:
        friendly_name: "EB3 Voltage L3+10"
        value_template: >-
            {% set x = states('sensor.eb3_0x006c').split(',')[4] | float(0) %}
            {% if x > 0 %}
              {{ x / 10 + 10 }}
            {% endif %}       
        unit_of_measurement: "V"
        device_class: voltage

      eb3_current_l3:
        friendly_name: "EB3 Current L3"
        value_template: >-
            {% set x = states('sensor.eb3_0x006c').split(',')[5] | float(0) %}
            {% if x %}
              {{ x / 10 }}
            {% endif %}
        unit_of_measurement: "A"
        device_class: current

      eb3_current:
        friendly_name: "EB3 Current"
        value_template: >-
            {% set x = states('sensor.eb3_0x006c').split(',')[6] | float(0) %}
            {% if x %}
              {{ x / 10 }}
            {% endif %}
        unit_of_measurement: "A"
        device_class: current

# 7B
      eb3_power_factor:
        friendly_name: "EB3 Power Factor"
        value_template: >-
            {% set x = states('sensor.eb3_0x007b').split(',')[0] | float(0) %}
            {% if x > 0 %}
              {{ x / 1000 }}
            {% endif %}
        unit_of_measurement: "pu"
        device_class: power_factor

      eb3_power_factor_l1:
        friendly_name: "EB3 Power Factor L1"
        value_template: >-
            {% set x = states('sensor.eb3_0x007b').split(',')[1] | float(0) %}
            {% if x %}
              {{ x / 1000 }}
            {% endif %}
        unit_of_measurement: "pu"
        device_class: power_factor

      eb3_power_factor_l2:
        friendly_name: "EB3 Power Factor L2"
        value_template: >-
            {% set x = states('sensor.eb3_0x007b').split(',')[2] | float(0) %}
            {% if x > 0 %}
              {{ x / 1000 }}
            {% endif %}
        unit_of_measurement: "pu"
        device_class: power_factor

      eb3_power_factor_l3:
        friendly_name: "EB3 Power Factor L3"
        value_template: >-
            {% set x = states('sensor.eb3_0x007b').split(',')[3] | float(0) %}
            {% if x > 0 %}
              {{ x / 1000 }}
            {% endif %}
        unit_of_measurement: "pu"
        device_class: power_factor

      eb3_frequency:
        friendly_name: "EB3 Frequency"
        value_template: >-
            {% set x = states('sensor.eb3_0x007b').split(',')[4] | float(0) %}
            {% if x > 0 %}
              {{ x / 10 }}
            {% endif %}
        unit_of_measurement: "Hz"
        icon_template: mdi:pulse

# 73

      eb3_active_power_l1:
        friendly_name: "EB3 Active Power L1"
        value_template: >-
            {% set x = states('sensor.eb3_0x0073').split(',')[0] | int(0) %}
            {% if x %}
              {{ x }}
            {% endif %}
        unit_of_measurement: "W"
        device_class: power
        #state_class: measurement

      eb3_active_power_l2:
        friendly_name: "EB3 Active Power L2"
        value_template: >-
            {% set x = states('sensor.eb3_0x0073').split(',')[2] | int(0) %}
            {% if x %}
              {{ x }}
            {% endif %}
        unit_of_measurement: "W"
        device_class: power
        #state_class: measurement

      eb3_active_power_l3:
        friendly_name: "EB3 Active Power L3"
        value_template: >-
            {% set x = states('sensor.eb3_0x0073').split(',')[4] | int(0) %}
            {% if x %}
              {{ x }}
            {% endif %}
        unit_of_measurement: "W"
        device_class: power
        #state_class: measurement

      eb3_active_power:
        friendly_name: "EB3 Active Power"
        value_template: >-
            {% set x = states('sensor.eb3_0x0073').split(',')[6] | int(0) %}
            {% if x %}
              {{ x }}
            {% endif %}
        unit_of_measurement: "W"
        device_class: power
        #state_class: measurement

###
##
#
